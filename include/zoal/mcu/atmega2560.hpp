/**
 * Autogenerated file. Do not modify manually.
 */
#ifndef ZOAL_MCU_ATMEGA2560_HPP
#define ZOAL_MCU_ATMEGA2560_HPP

#include <stdint.h>
#include <zoal/arch/avr/adc.hpp>
#include <zoal/arch/avr/atmega/cfg.hpp>
#include <zoal/arch/avr/atmega/irq.hpp>
#include <zoal/arch/avr/atmega/metadata.hpp>
#include <zoal/arch/avr/atmega/mux.hpp>
#include <zoal/arch/avr/atmega/usart.hpp>
#include <zoal/arch/avr/port.hpp>
#include <zoal/arch/avr/timer16.hpp>
#include <zoal/arch/avr/timer8.hpp>
#include <zoal/gpio/base_api.hpp>
#include <zoal/gpio/pin.hpp>
#include <zoal/gpio/port_link.hpp>
#include <zoal/mcu/base_mcu.hpp>

namespace zoal { namespace mcu {
    template<uint32_t Frequency>
    class atmega2560 : public base_mcu<Frequency, 1> {
    public:
        template<uintptr_t Address, uint8_t PinMask>
        using port = typename ::zoal::arch::avr::port<Address, PinMask>;

        using port_a = port<0x0020, 0xff>;
        using port_b = port<0x0023, 0xff>;
        using port_c = port<0x0026, 0xff>;
        using port_d = port<0x0029, 0xff>;
        using port_e = port<0x002c, 0xff>;
        using port_f = port<0x002f, 0xff>;
        using port_g = port<0x0032, 0x3f>;
        using port_h = port<0x0100, 0xff>;
        using port_j = port<0x0103, 0xff>;
        using port_k = port<0x0106, 0xff>;
        using port_l = port<0x0109, 0xff>;

        using timer_00 = ::zoal::arch::avr::atmega::timer8<0x0044, 0, false>;
        using timer_01 = ::zoal::arch::avr::atmega::timer16<0x0080, 1>;
        using timer_02 = ::zoal::arch::avr::atmega::timer8<0x00b0, 2, true>;
        using timer_03 = ::zoal::arch::avr::atmega::timer16<0x0090, 3>;
        using timer_04 = ::zoal::arch::avr::atmega::timer16<0x00a0, 4>;
        using timer_05 = ::zoal::arch::avr::atmega::timer16<0x0120, 5>;

        template<class Buffer>
        using usart_00 = typename ::zoal::arch::avr::usart<0x00c0, 0, Buffer>;

        template<class Buffer>
        using usart_01 = typename ::zoal::arch::avr::usart<0x00c8, 1, Buffer>;

        template<class Buffer>
        using usart_02 = typename ::zoal::arch::avr::usart<0x00d0, 2, Buffer>;

        template<class Buffer>
        using usart_03 = typename ::zoal::arch::avr::usart<0x0130, 3, Buffer>;

        using adc_00 = ::zoal::arch::avr::adc<::zoal::arch::avr::mcu_type::atmega, 0x0078, 0>;

        template<class Port, uint8_t Offset>
        using pin = typename ::zoal::gpio::pin<Port, Offset>;

        using pa_00 = pin<port_a, 0x0>;
        using pa_01 = pin<port_a, 0x1>;
        using pa_02 = pin<port_a, 0x2>;
        using pa_03 = pin<port_a, 0x3>;
        using pa_04 = pin<port_a, 0x4>;
        using pa_05 = pin<port_a, 0x5>;
        using pa_06 = pin<port_a, 0x6>;
        using pa_07 = pin<port_a, 0x7>;

        using pb_00 = pin<port_b, 0x0>;
        using pb_01 = pin<port_b, 0x1>;
        using pb_02 = pin<port_b, 0x2>;
        using pb_03 = pin<port_b, 0x3>;
        using pb_04 = pin<port_b, 0x4>;
        using pb_05 = pin<port_b, 0x5>;
        using pb_06 = pin<port_b, 0x6>;
        using pb_07 = pin<port_b, 0x7>;

        using pc_00 = pin<port_c, 0x0>;
        using pc_01 = pin<port_c, 0x1>;
        using pc_02 = pin<port_c, 0x2>;
        using pc_03 = pin<port_c, 0x3>;
        using pc_04 = pin<port_c, 0x4>;
        using pc_05 = pin<port_c, 0x5>;
        using pc_06 = pin<port_c, 0x6>;
        using pc_07 = pin<port_c, 0x7>;

        using pd_00 = pin<port_d, 0x0>;
        using pd_01 = pin<port_d, 0x1>;
        using pd_02 = pin<port_d, 0x2>;
        using pd_03 = pin<port_d, 0x3>;
        using pd_04 = pin<port_d, 0x4>;
        using pd_05 = pin<port_d, 0x5>;
        using pd_06 = pin<port_d, 0x6>;
        using pd_07 = pin<port_d, 0x7>;

        using pe_00 = pin<port_e, 0x0>;
        using pe_01 = pin<port_e, 0x1>;
        using pe_02 = pin<port_e, 0x2>;
        using pe_03 = pin<port_e, 0x3>;
        using pe_04 = pin<port_e, 0x4>;
        using pe_05 = pin<port_e, 0x5>;
        using pe_06 = pin<port_e, 0x6>;
        using pe_07 = pin<port_e, 0x7>;

        using pf_00 = pin<port_f, 0x0>;
        using pf_01 = pin<port_f, 0x1>;
        using pf_02 = pin<port_f, 0x2>;
        using pf_03 = pin<port_f, 0x3>;
        using pf_04 = pin<port_f, 0x4>;
        using pf_05 = pin<port_f, 0x5>;
        using pf_06 = pin<port_f, 0x6>;
        using pf_07 = pin<port_f, 0x7>;

        using pg_00 = pin<port_g, 0x0>;
        using pg_01 = pin<port_g, 0x1>;
        using pg_02 = pin<port_g, 0x2>;
        using pg_03 = pin<port_g, 0x3>;
        using pg_04 = pin<port_g, 0x4>;
        using pg_05 = pin<port_g, 0x5>;

        using ph_00 = pin<port_h, 0x0>;
        using ph_01 = pin<port_h, 0x1>;
        using ph_02 = pin<port_h, 0x2>;
        using ph_03 = pin<port_h, 0x3>;
        using ph_04 = pin<port_h, 0x4>;
        using ph_05 = pin<port_h, 0x5>;
        using ph_06 = pin<port_h, 0x6>;
        using ph_07 = pin<port_h, 0x7>;

        using pj_00 = pin<port_j, 0x0>;
        using pj_01 = pin<port_j, 0x1>;
        using pj_02 = pin<port_j, 0x2>;
        using pj_03 = pin<port_j, 0x3>;
        using pj_04 = pin<port_j, 0x4>;
        using pj_05 = pin<port_j, 0x5>;
        using pj_06 = pin<port_j, 0x6>;
        using pj_07 = pin<port_j, 0x7>;

        using pk_00 = pin<port_k, 0x0>;
        using pk_01 = pin<port_k, 0x1>;
        using pk_02 = pin<port_k, 0x2>;
        using pk_03 = pin<port_k, 0x3>;
        using pk_04 = pin<port_k, 0x4>;
        using pk_05 = pin<port_k, 0x5>;
        using pk_06 = pin<port_k, 0x6>;
        using pk_07 = pin<port_k, 0x7>;

        using pl_00 = pin<port_l, 0x0>;
        using pl_01 = pin<port_l, 0x1>;
        using pl_02 = pin<port_l, 0x2>;
        using pl_03 = pin<port_l, 0x3>;
        using pl_04 = pin<port_l, 0x4>;
        using pl_05 = pin<port_l, 0x5>;
        using pl_06 = pin<port_l, 0x6>;
        using pl_07 = pin<port_l, 0x7>;

        using port_chain = typename ::zoal::gpio::chain_builder<port_a, port_b, port_c, port_d, port_e, port_f, port_g, port_h, port_j, port_k, port_l>::chain;
        using api = ::zoal::gpio::base_api<port_chain>;
        using mux = ::zoal::arch::avr::atmega::mux<api>;
        using cfg = ::zoal::arch::avr::atmega::cfg<api, Frequency>;
        using irq = ::zoal::arch::avr::atmega::irq;
    };
}}

namespace zoal { namespace metadata {
    using zoal::utils::integral_constant;

    template<>
    struct pin_to_pwm_channel<0x0044, 0x0032, 5, 1> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0044, 0x0023, 7, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0080, 0x0109, 3, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0080, 0x0109, 4, 1> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x00b0, 0x0023, 4, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x00b0, 0x0100, 6, 1> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0090, 0x0109, 3, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0090, 0x0109, 4, 1> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x00a0, 0x0109, 3, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x00a0, 0x0109, 4, 1> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0120, 0x0109, 3, 0> : integral_constant<bool, true> {};

    template<>
    struct pin_to_pwm_channel<0x0120, 0x0109, 4, 1> : integral_constant<bool, true> {};

    template<>
    struct usart_mapping<0x00c0, 0x0000, 0> : base_usart_mapping<0, 0, 0> {};

    template<>
    struct usart_mapping<0x00c0, 0x002c, 1> : base_usart_mapping<-1, 0, -1> {};

    template<>
    struct usart_mapping<0x00c0, 0x002c, 0> : base_usart_mapping<0, -1, -1> {};

    template<>
    struct usart_mapping<0x00c0, 0x002c, 2> : base_usart_mapping<-1, -1, 0> {};

    template<>
    struct usart_mapping<0x00c8, 0x0000, 0> : base_usart_mapping<0, 0, 0> {};

    template<>
    struct usart_mapping<0x00c8, 0x002c, 1> : base_usart_mapping<-1, 0, -1> {};

    template<>
    struct usart_mapping<0x00c8, 0x002c, 0> : base_usart_mapping<0, -1, -1> {};

    template<>
    struct usart_mapping<0x00c8, 0x002c, 2> : base_usart_mapping<-1, -1, 0> {};

    template<>
    struct usart_mapping<0x00d0, 0x0000, 0> : base_usart_mapping<0, 0, 0> {};

    template<>
    struct usart_mapping<0x00d0, 0x002c, 1> : base_usart_mapping<-1, 0, -1> {};

    template<>
    struct usart_mapping<0x00d0, 0x002c, 0> : base_usart_mapping<0, -1, -1> {};

    template<>
    struct usart_mapping<0x00d0, 0x002c, 2> : base_usart_mapping<-1, -1, 0> {};

    template<>
    struct usart_mapping<0x0130, 0x0000, 0> : base_usart_mapping<0, 0, 0> {};

    template<>
    struct usart_mapping<0x0130, 0x002c, 1> : base_usart_mapping<-1, 0, -1> {};

    template<>
    struct usart_mapping<0x0130, 0x002c, 0> : base_usart_mapping<0, -1, -1> {};

    template<>
    struct usart_mapping<0x0130, 0x002c, 2> : base_usart_mapping<-1, -1, 0> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 0> : integral_constant<int, 0> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 1> : integral_constant<int, 1> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 2> : integral_constant<int, 2> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 3> : integral_constant<int, 3> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 4> : integral_constant<int, 4> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 5> : integral_constant<int, 5> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 6> : integral_constant<int, 6> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x002f, 7> : integral_constant<int, 7> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 0> : integral_constant<int, 8> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 1> : integral_constant<int, 9> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 2> : integral_constant<int, 10> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 3> : integral_constant<int, 11> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 4> : integral_constant<int, 12> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 5> : integral_constant<int, 13> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 6> : integral_constant<int, 14> {};

    template<>
    struct pin_to_adc_channel<0x0078, 0x0106, 7> : integral_constant<int, 15> {};

}}

#endif
