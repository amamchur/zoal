/**
 * Autogenerated file. Do not modify manually.
 */
#ifndef ZOAL_MCU_STM32F103C8TX_HPP
#define ZOAL_MCU_STM32F103C8TX_HPP

#include <stdint.h>
#include <zoal/arch/cortex/stm32f1/adc.hpp>
#include <zoal/arch/cortex/stm32f1/afio.hpp>
#include <zoal/arch/cortex/stm32f1/cfg.hpp>
#include <zoal/arch/cortex/stm32f1/metadata.hpp>
#include <zoal/arch/cortex/stm32f1/mux.hpp>
#include <zoal/arch/cortex/stm32f1/port.hpp>
#include <zoal/arch/cortex/stm32f1/timer.hpp>
#include <zoal/arch/cortex/stm32f1/usart.hpp>
#include <zoal/arch/cortex/stm32x/bus_clock.hpp>
#include <zoal/arch/cortex/stm32x/metadata.hpp>
#include <zoal/arch/cortex/stm32x/rcc.hpp>
#include <zoal/arch/enable.hpp>
#include <zoal/arch/power.hpp>
#include <zoal/gpio/api.hpp>

namespace zoal { namespace mcu {
    class stm32f103c8tx {
    public:
        using self_type = stm32f103c8tx;

        using rcc = ::zoal::arch::stm32x::rcc<>;

        template<uint32_t Mask>
        using clock_ahb = ::zoal::arch::stm32x::bus_clock<rcc, zoal::arch::bus::cortex_ahb, Mask>;

        template<uint32_t Mask>
        using clock_apb1 = ::zoal::arch::stm32x::bus_clock<rcc, zoal::arch::bus::cortex_apb1, Mask>;

        template<uint32_t Mask>
        using clock_apb2 = ::zoal::arch::stm32x::bus_clock<rcc, zoal::arch::bus::cortex_apb2, Mask>;

        using afio = ::zoal::arch::stm32f1::afio<0x40010000, clock_apb2<0x00000001>>;

        template<uintptr_t Address, class Clock, uint32_t PinMask>
        using port = typename ::zoal::arch::stm32f1::port<Address, Clock, PinMask>;

        using port_a = port<0x40010800, clock_apb2<0x00000004>, 0xFFFF>;
        using port_b = port<0x40010C00, clock_apb2<0x00000008>, 0xFFFF>;
        using port_c = port<0x40011000, clock_apb2<0x00000010>, 0xE000>;
        using port_d = port<0x40011400, clock_apb2<0x00000020>, 0x0003>;

        using adc_01 = ::zoal::arch::stm32f1::adc<0x40012400, clock_apb2<0x00001000>>;
        using adc_02 = ::zoal::arch::stm32f1::adc<0x40012800, clock_apb2<0x00002000>>;

        using timer_01 = zoal::arch::stm32f1::timer<0x40012C00, clock_apb2<0x00000800>>;
        using timer_02 = zoal::arch::stm32f1::timer<0x40000000, clock_apb1<0x00000001>>;
        using timer_03 = zoal::arch::stm32f1::timer<0x40000400, clock_apb1<0x00000002>>;
        using timer_04 = zoal::arch::stm32f1::timer<0x40000800, clock_apb1<0x00000004>>;

        using usart_01 = typename ::zoal::arch::stm32f1::usart<0x40013800, clock_apb2<0x00004000>>;
        using usart_02 = typename ::zoal::arch::stm32f1::usart<0x40004400, clock_apb1<0x00020000>>;
        using usart_03 = typename ::zoal::arch::stm32f1::usart<0x40004800, clock_apb1<0x00040000>>;

        template<class Port, uint8_t Offset>
        using pin = typename ::zoal::gpio::pin<Port, Offset>;

        using pa_00 = pin<port_a, 0x00>;
        using pa_01 = pin<port_a, 0x01>;
        using pa_02 = pin<port_a, 0x02>;
        using pa_03 = pin<port_a, 0x03>;
        using pa_04 = pin<port_a, 0x04>;
        using pa_05 = pin<port_a, 0x05>;
        using pa_06 = pin<port_a, 0x06>;
        using pa_07 = pin<port_a, 0x07>;
        using pa_08 = pin<port_a, 0x08>;
        using pa_09 = pin<port_a, 0x09>;
        using pa_10 = pin<port_a, 0x0A>;
        using pa_11 = pin<port_a, 0x0B>;
        using pa_12 = pin<port_a, 0x0C>;
        using pa_13 = pin<port_a, 0x0D>;
        using pa_14 = pin<port_a, 0x0E>;
        using pa_15 = pin<port_a, 0x0F>;

        using pb_00 = pin<port_b, 0x00>;
        using pb_01 = pin<port_b, 0x01>;
        using pb_02 = pin<port_b, 0x02>;
        using pb_03 = pin<port_b, 0x03>;
        using pb_04 = pin<port_b, 0x04>;
        using pb_05 = pin<port_b, 0x05>;
        using pb_06 = pin<port_b, 0x06>;
        using pb_07 = pin<port_b, 0x07>;
        using pb_08 = pin<port_b, 0x08>;
        using pb_09 = pin<port_b, 0x09>;
        using pb_10 = pin<port_b, 0x0A>;
        using pb_11 = pin<port_b, 0x0B>;
        using pb_12 = pin<port_b, 0x0C>;
        using pb_13 = pin<port_b, 0x0D>;
        using pb_14 = pin<port_b, 0x0E>;
        using pb_15 = pin<port_b, 0x0F>;

        using pc_13 = pin<port_c, 0x0D>;
        using pc_14 = pin<port_c, 0x0E>;
        using pc_15 = pin<port_c, 0x0F>;

        using pd_00 = pin<port_d, 0x00>;
        using pd_01 = pin<port_d, 0x01>;

        using ports = ::zoal::ct::type_list<port_a, port_b, port_c, port_d>;
        using api = ::zoal::gpio::api;
        using mux = ::zoal::arch::stm32f1::mux<self_type>;
        using cfg = ::zoal::arch::stm32f1::cfg<self_type>;

        template<class... Module>
        using power = ::zoal::arch::power<Module...>;

        template<class... Module>
        using enable = ::zoal::arch::enable<Module...>;
    };
}}

namespace zoal { namespace metadata {
    using zoal::ct::integral_constant;

    template<> // TIM2_REMAP0 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x00, signal::ch1> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM2_REMAP0 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x00, signal::etr> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM2_REMAP0 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x01, signal::ch2> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM2_REMAP0 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x02, signal::ch3> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM2_REMAP0 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x03, signal::ch4> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM2_REMAP1 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x0F, signal::ch1> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM2_REMAP1 -> tim2
    struct stm32_remap<0x40000000, 0x40010800, 0x0F, signal::etr> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM2_REMAP1 -> tim2
    struct stm32_remap<0x40000000, 0x40010C00, 0x03, signal::ch2> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM2_REMAP2 -> tim2
    struct stm32_remap<0x40000000, 0x40010C00, 0x0A, signal::ch3> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM2_REMAP2 -> tim2
    struct stm32_remap<0x40000000, 0x40010C00, 0x0B, signal::ch4> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM3_REMAP0 -> tim3
    struct stm32_remap<0x40000400, 0x40010800, 0x06, signal::ch1> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM3_REMAP0 -> tim3
    struct stm32_remap<0x40000400, 0x40010800, 0x07, signal::ch2> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM3_REMAP0 -> tim3
    struct stm32_remap<0x40000400, 0x40010C00, 0x00, signal::ch3> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM3_REMAP0 -> tim3
    struct stm32_remap<0x40000400, 0x40010C00, 0x01, signal::ch4> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM3_REMAP1 -> tim3
    struct stm32_remap<0x40000400, 0x40010C00, 0x04, signal::ch1> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM3_REMAP1 -> tim3
    struct stm32_remap<0x40000400, 0x40010C00, 0x05, signal::ch2> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM3_REMAP2 -> tim3
    struct stm32_remap<0x40000400, 0x40011000, 0x06, signal::ch1> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM3_REMAP2 -> tim3
    struct stm32_remap<0x40000400, 0x40011000, 0x07, signal::ch2> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM3_REMAP2 -> tim3
    struct stm32_remap<0x40000400, 0x40011000, 0x08, signal::ch3> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM3_REMAP2 -> tim3
    struct stm32_remap<0x40000400, 0x40011000, 0x09, signal::ch4> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM4_REMAP0 -> tim4
    struct stm32_remap<0x40000800, 0x40010C00, 0x06, signal::ch1> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM4_REMAP0 -> tim4
    struct stm32_remap<0x40000800, 0x40010C00, 0x07, signal::ch2> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM4_REMAP0 -> tim4
    struct stm32_remap<0x40000800, 0x40010C00, 0x08, signal::ch3> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM4_REMAP0 -> tim4
    struct stm32_remap<0x40000800, 0x40010C00, 0x09, signal::ch4> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM4_REMAP1 -> tim4
    struct stm32_remap<0x40000800, 0x40011400, 0x0C, signal::ch1> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM4_REMAP1 -> tim4
    struct stm32_remap<0x40000800, 0x40011400, 0x0D, signal::ch2> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM4_REMAP1 -> tim4
    struct stm32_remap<0x40000800, 0x40011400, 0x0E, signal::ch3> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM4_REMAP1 -> tim4
    struct stm32_remap<0x40000800, 0x40011400, 0x0F, signal::ch4> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART2_REMAP0 -> usart2
    struct stm32_remap<0x40004400, 0x40010800, 0x00, signal::cts> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART2_REMAP0 -> usart2
    struct stm32_remap<0x40004400, 0x40010800, 0x01, signal::rts> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART2_REMAP0 -> usart2
    struct stm32_remap<0x40004400, 0x40010800, 0x02, signal::tx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART2_REMAP0 -> usart2
    struct stm32_remap<0x40004400, 0x40010800, 0x03, signal::rx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART2_REMAP0 -> usart2
    struct stm32_remap<0x40004400, 0x40010800, 0x04, signal::ck> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART2_REMAP1 -> usart2
    struct stm32_remap<0x40004400, 0x40011400, 0x03, signal::cts> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART2_REMAP1 -> usart2
    struct stm32_remap<0x40004400, 0x40011400, 0x04, signal::rts> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART2_REMAP1 -> usart2
    struct stm32_remap<0x40004400, 0x40011400, 0x05, signal::tx> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART2_REMAP1 -> usart2
    struct stm32_remap<0x40004400, 0x40011400, 0x06, signal::rx> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART2_REMAP1 -> usart2
    struct stm32_remap<0x40004400, 0x40011400, 0x07, signal::ck> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART3_REMAP0 -> usart3
    struct stm32_remap<0x40004800, 0x40010C00, 0x0A, signal::tx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART3_REMAP0 -> usart3
    struct stm32_remap<0x40004800, 0x40010C00, 0x0B, signal::rx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART3_REMAP0 -> usart3
    struct stm32_remap<0x40004800, 0x40010C00, 0x0C, signal::ck> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART3_REMAP0 -> usart3
    struct stm32_remap<0x40004800, 0x40010C00, 0x0D, signal::cts> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART3_REMAP0 -> usart3
    struct stm32_remap<0x40004800, 0x40010C00, 0x0E, signal::rts> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART3_REMAP1 -> usart3
    struct stm32_remap<0x40004800, 0x40011000, 0x0A, signal::tx> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART3_REMAP1 -> usart3
    struct stm32_remap<0x40004800, 0x40011000, 0x0B, signal::rx> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART3_REMAP1 -> usart3
    struct stm32_remap<0x40004800, 0x40011000, 0x0C, signal::ck> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART3_REMAP2 -> usart3
    struct stm32_remap<0x40004800, 0x40011400, 0x08, signal::tx> : zoal::ct::integral_constant<int, 2> {};
    template<> // USART3_REMAP2 -> usart3
    struct stm32_remap<0x40004800, 0x40011400, 0x09, signal::rx> : zoal::ct::integral_constant<int, 2> {};
    template<> // USART3_REMAP2 -> usart3
    struct stm32_remap<0x40004800, 0x40011400, 0x0A, signal::ck> : zoal::ct::integral_constant<int, 2> {};
    template<> // USART3_REMAP2 -> usart3
    struct stm32_remap<0x40004800, 0x40011400, 0x0B, signal::cts> : zoal::ct::integral_constant<int, 2> {};
    template<> // USART3_REMAP2 -> usart3
    struct stm32_remap<0x40004800, 0x40011400, 0x0C, signal::rts> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP1 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x06, signal::bkin> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM1_REMAP1 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x07, signal::ch1n> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x08, signal::ch1> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x09, signal::ch2> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x0A, signal::ch3> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x0B, signal::ch4> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010800, 0x0C, signal::etr> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP1 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x00, signal::ch2n> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM1_REMAP1 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x01, signal::ch3n> : zoal::ct::integral_constant<int, 1> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x0C, signal::bkin> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x0D, signal::ch1n> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x0E, signal::ch2n> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP0 -> tim1
    struct stm32_remap<0x40012C00, 0x40010C00, 0x0F, signal::ch3n> : zoal::ct::integral_constant<int, 0> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x07, signal::etr> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x08, signal::ch1n> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x09, signal::ch1> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0A, signal::ch2n> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0B, signal::ch2> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0C, signal::ch3n> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0D, signal::ch3> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0E, signal::ch4> : zoal::ct::integral_constant<int, 2> {};
    template<> // TIM1_REMAP2 -> tim1
    struct stm32_remap<0x40012C00, 0x40011800, 0x0F, signal::bkin> : zoal::ct::integral_constant<int, 2> {};
    template<> // USART1_REMAP0 -> usart1
    struct stm32_remap<0x40013800, 0x40010800, 0x09, signal::tx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART1_REMAP0 -> usart1
    struct stm32_remap<0x40013800, 0x40010800, 0x0A, signal::rx> : zoal::ct::integral_constant<int, 0> {};
    template<> // USART1_REMAP1 -> usart1
    struct stm32_remap<0x40013800, 0x40010C00, 0x06, signal::tx> : zoal::ct::integral_constant<int, 1> {};
    template<> // USART1_REMAP1 -> usart1
    struct stm32_remap<0x40013800, 0x40010C00, 0x07, signal::rx> : zoal::ct::integral_constant<int, 1> {};
}}

#endif
